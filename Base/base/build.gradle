plugins {
    id 'com.android.library'
}

android {
    compileSdkVersion Integer.parseInt(COMPILE_SDK_VERSION)
    buildToolsVersion BUILD_TOOLS_VERSION

    defaultConfig {
        minSdkVersion Integer.parseInt(MIN_SDK_VERSION)
        targetSdkVersion Integer.parseInt(TARGET_SDK_VERSION)
        versionCode Integer.parseInt(VERSION_CODE)
        versionName VERSION

        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            buildConfigField "String", "VERSION_NAME", "\"" + VERSION + "\""
            buildConfigField "int", "VERSION_CODE", VERSION_CODE
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            buildConfigField "String", "VERSION_NAME", "\"" + VERSION + "\""
            buildConfigField "int", "VERSION_CODE", VERSION_CODE
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        dataBinding true
    }
}

dependencies {
    // multiDex分包
    api "androidx.multidex:multidex:$rootProject.multidex"

    // 生命周期组件:不含 ViewModel or LiveData 的生命周期运行时组件
    api "androidx.lifecycle:lifecycle-runtime:$rootProject.lifecycle"

    // 生命周期组件:使用java8时的注解解释器
    api "androidx.lifecycle:lifecycle-common-java8:$rootProject.lifecycle"

    // 生命周期组件:进程生命周期监控器
    api "androidx.lifecycle:lifecycle-process:$rootProject.lifecycle"

    // 生命周期组件:在服务内实现生命周期
    api "androidx.lifecycle:lifecycle-service:$rootProject.lifecycle"

    // 自定义View Adapter ViewHolder
    api "androidx.recyclerview:recyclerview:$rootProject.recyclerview"

    // 生命周期模块：ViewModel  LiveData  SavedState
    api "androidx.lifecycle:lifecycle-viewmodel:$rootProject.lifecycle"
    api "androidx.lifecycle:lifecycle-livedata:$rootProject.lifecycle"
    api "androidx.lifecycle:lifecycle-viewmodel-savedstate:$rootProject.lifecycle"

    api "androidx.appcompat:appcompat:$rootProject.appcompat"
    api "androidx.constraintlayout:constraintlayout:$rootProject.constraintlayout"
    api "com.google.android.material:material:$rootProject.material"

    api "androidx.viewpager2:viewpager2:$rootProject.viewpager2"

    // Glide 图片加载库
    api "com.github.bumptech.glide:glide:$rootProject.glide"
    // Glide 图形变化支持库
    api "jp.wasabeef:glide-transformations:3.3.0"

    // 路由框架
    api "com.alibaba:arouter-api:$rootProject.arouter"
    annotationProcessor "com.alibaba:arouter-compiler:$rootProject.arouter"

    // rxjava生命周期框架
    compileOnly 'com.github.liujingxing.rxlife:rxlife-rxjava3:2.2.1'
}